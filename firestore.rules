rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Helper functions
    function isAuthenticated() {
      return request.auth != null;
    }
    
    function isOwner(userId) {
      return request.auth.uid == userId;
    }

    // Users collection
    match /users/{userId} {
      allow read: if isAuthenticated() && isOwner(userId);
      allow create, update: if isAuthenticated() && isOwner(userId);
      allow delete: if false; // Prevent user deletion through client
    }

    // Campaigns collection and its subcollections
    match /campaigns/{campaignId} {
      allow read: if isAuthenticated() && resource.data.userId == request.auth.uid;
      allow create: if isAuthenticated() && request.resource.data.userId == request.auth.uid;
      allow update: if isAuthenticated() && resource.data.userId == request.auth.uid;
      allow delete: if isAuthenticated() && resource.data.userId == request.auth.uid;

      // Allow access to metrics subcollection
      match /metrics/{metricId} {
        allow read, write: if isAuthenticated() && 
          get(/databases/$(database)/documents/campaigns/$(campaignId)).data.userId == request.auth.uid;
      }
    }
   
    // Allow access to user-specific campaign data
    match /users/{userId}/campaigns/{campaignId} {
      allow read: if isAuthenticated() && isOwner(userId);
      allow write: if isAuthenticated() && isOwner(userId);

      // Allow access to campaign metrics
      match /metrics/{metricId} {
        allow read, write: if isAuthenticated() && isOwner(userId);
      }
    }

    // Campaign history and metrics
    match /users/{userId}/campaignHistory/{campaignId} {
      allow read, write: if isAuthenticated() && isOwner(userId);
      
      match /metrics/{metricId} {
        allow read, write: if isAuthenticated() && isOwner(userId);
      }
    }

    // Templates collection
    match /templates/{templateId} {
      allow read: if isAuthenticated() && resource.data.userId == request.auth.uid;
      allow create: if isAuthenticated() && request.resource.data.userId == request.auth.uid;
      allow update: if isAuthenticated() && resource.data.userId == request.auth.uid;
      allow delete: if isAuthenticated() && resource.data.userId == request.auth.uid;
    }

    // Email stats collection
    match /emailStats/{statId} {
      allow read: if isAuthenticated() && resource.data.userId == request.auth.uid;
      allow create: if isAuthenticated() && request.resource.data.userId == request.auth.uid;
      allow update: if isAuthenticated() && resource.data.userId == request.auth.uid;
      allow delete: if false; // Prevent stats deletion through client
    }

    // Allow querying campaigns collection
    match /campaigns/{document=**} {
      allow read: if isAuthenticated() && 
        (resource.data.userId == request.auth.uid);
      allow list: if isAuthenticated();
    }
  }
}
